{"version":3,"sources":["components/Form.js","components/Search.js","components/AddContactNumber.js","components/AddEmail.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","name","email","contact","dob","handleChange","event","setState","target","value","console","log","this","values","Form","onSubmit","props","addContact","bind","Row","Group","controlId","Label","Control","type","placeholder","className","onChange","required","Check","label","Button","variant","Component","Search","val","search","AddContactNumber","d","addContactNumber","AddEmail","addEmail","Main","v","preventDefault","newData","fetch","method","headers","body","JSON","stringify","then","res","json","valid","data1","data","push","alert","searchData","sData","result","map","e1","cn1","e1r","e","cn1r","c","Card","CardBody","CardTitle","CardText","searchedData","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1541e298.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n// import {Link} from 'react-router-dom';\r\nimport {Form,Button} from 'react-bootstrap';\r\n\r\nexport default class Contact extends Component{\r\n    state={\r\n        name:\"\",\r\n        email:\"\",\r\n        contact: \"\",\r\n        dob: \"00-00-0000\"\r\n    }\r\n\r\n    handleChange = (event) =>\r\n    {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render(){\r\n        console.log(\"info\");\r\n            const {name, email, contact, dob }=this.state;\r\n            const values={name, email, contact, dob};\r\n            return( \r\n                <>\r\n                    <h2>Add new contact</h2>\r\n                    <Form onSubmit={this.props.addContact.bind(this,values)}>\r\n                        <Form.Row>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Name : </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name...\"\r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                />\r\n                            \r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Email : </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email...\"\r\n                                    className=\"form-control mt-2\"\r\n                                    name=\"email\"\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Contact : </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"Contact...\"\r\n                                    className=\"form-control mt-2\"\r\n                                    name=\"contact\"\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>DOB : </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"DOB dd-mm-yyyy\"\r\n                                    className=\"form-control mt-2\"\r\n                                    name=\"dob\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group controlId=\"formBasicCheckbox\">\r\n                                <Form.Check type=\"checkbox\" label=\"Check me out\" required />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Button type='submit' variant=\"primary\">Add</Button>\r\n                        </Form.Row>\r\n                    </Form>\r\n\r\n                </>\r\n            )\r\n        }\r\n        \r\n    \r\n}\r\n","import React, { Component} from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport {Form,Button} from 'react-bootstrap';\r\n\r\nclass Search extends Component{\r\n     state={\r\n            val: \"\"\r\n        }\r\n      \r\n    \r\n    handleChange=(event) =>{\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render(){\r\n        const {val}=this.state;\r\n        const values={val};\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.props.search.bind(this,values)}>\r\n                    <Form.Row>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Value : </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Search...\"\r\n                                className=\"form-control\"\r\n                                name=\"val\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button type='submit' variant=\"primary\">Search</Button>\r\n                    </Form.Row>\r\n                </Form>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport {Card, CardBody, CardText, CardTitle} from 'reactstrap';\r\nimport {Form,Button} from 'react-bootstrap';\r\n\r\nclass AddContactNumber extends Component{\r\n    state={\r\n        val: \"\",\r\n        d: this.props.d\r\n    }\r\n  \r\n\r\nhandleChange=(event) =>{\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n    })\r\n}\r\nrender(){\r\n    const {val,d}=this.state;\r\n    const values={val,d};\r\n    return(\r\n        <div>\r\n            <Form onSubmit={this.props.addContactNumber.bind(this,values)}>\r\n                <Form.Row>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Contact number : </Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Contact-number...\"\r\n                            className=\"form-control\"\r\n                            name=\"val\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button type='submit' variant=\"primary\">Add New Contact</Button>\r\n                </Form.Row>\r\n            </Form>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n}\r\n\r\nexport default AddContactNumber;","import React, { Component } from 'react';\r\nimport {Card, CardBody, CardText, CardTitle} from 'reactstrap';\r\nimport {Form,Button} from 'react-bootstrap';\r\n\r\nclass AddEmail extends Component{\r\n    state={\r\n        val: \"\",\r\n        d: this.props.d\r\n    }\r\n  \r\n\r\nhandleChange=(event) =>{\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n    })\r\n}\r\nrender(){\r\n    const {val,d}=this.state;\r\n    const values={val,d};\r\n    return(\r\n        <div>\r\n            <Form onSubmit={this.props.addEmail.bind(this,values)}>\r\n                <Form.Row>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email : </Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Email...\"\r\n                            className=\"form-control\"\r\n                            name=\"val\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button type='submit' variant=\"primary\">Add New Email</Button>\r\n                </Form.Row>\r\n            </Form>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n}\r\n\r\nexport default AddEmail;","import React, { Component } from 'react';\r\nimport {Card, CardBody, CardText, CardTitle, Button} from 'reactstrap';\r\nimport Form from './Form.js';\r\nimport Search from './Search.js';\r\nimport AddContactNumber from './AddContactNumber.js';\r\nimport AddEmail from './AddEmail.js';\r\n\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:  [],\r\n            searchData: []\r\n        };\r\n    }\r\n\r\n    //fetching all contacts\r\n    componentDidMount(){\r\n        console.log('did mount');\r\n        fetch('https://phone-book-web-app-backend.herokuapp.com/all')\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            console.log(JSON.stringify(res));\r\n            this.setState({data:res})\r\n        })\r\n\r\n        //making search data empty\r\n        this.setState({\r\n            searchData: []\r\n        })\r\n    }\r\n\r\n    //adding new contact(only one email-id and one contact-number for now)\r\n    addContact=(v,event) =>{\r\n        event.preventDefault();\r\n        console.log(v);\r\n        var newData={\r\n            name:v.name,\r\n            email:[v.email],\r\n            contact:[v.contact],\r\n            dob:v.dob\r\n        }\r\n\r\n        fetch('https://phone-book-web-app-backend.herokuapp.com/add',{\r\n                method:\"POST\",\r\n                headers:{\"Content-Type\":\"application/json\"},\r\n                body: JSON.stringify(newData)\r\n            })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res);\r\n                if(res.valid){\r\n                    var data1= this.state.data;\r\n                    data1.push(newData);\r\n                    this.setState({\r\n                        data: data1\r\n                    })\r\n                }\r\n                else{\r\n                    alert('Couldn\\'t able to add a contact');\r\n                }\r\n            })\r\n\r\n        // var data1= this.state.data;\r\n        // data1.push(newData);\r\n        // this.setState({\r\n        //     data: data1\r\n        // })\r\n    }\r\n\r\n    //seraching contacts\r\n    search=(v,event)=>{\r\n        event.preventDefault();\r\n\r\n        //seraching contacts by name\r\n        fetch(`https://phone-book-web-app-backend.herokuapp.com/getByName/${v.val}`)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            console.log(JSON.stringify(res));\r\n            this.setState({searchData:res});\r\n        })\r\n\r\n        //seraching contact by email\r\n        fetch(`https://phone-book-web-app-backend.herokuapp.com/getByEmail/${v.val}`)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            console.log(JSON.stringify(res));\r\n            if(res!=\"ERROR\"){\r\n                var sData=this.state.searchData;\r\n                sData.push(res);\r\n                this.setState({searchData:sData});\r\n            }\r\n        })\r\n\r\n        //seraching contact by contact-number\r\n        fetch(`https://phone-book-web-app-backend.herokuapp.com/getByContact/${v.val}`)\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            console.log(JSON.stringify(res));\r\n            if(res!=\"ERROR\"){\r\n                var sData=this.state.searchData;\r\n                sData.push(res);\r\n                this.setState({searchData:sData});\r\n            }\r\n        })\r\n    }\r\n\r\n    addEmail =(v,event)=>{\r\n        var newData={\r\n            val:v.val,\r\n            d:v.d.email[0]\r\n        }\r\n        fetch('https://phone-book-web-app-backend.herokuapp.com/addEmail',{\r\n                method:\"PUT\",\r\n                headers:{\"Content-Type\":\"application/json\"},\r\n                body: JSON.stringify(newData)\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            if(res.valid){\r\n                alert(\"Email Added\");  \r\n            }\r\n            else{\r\n                alert(\"Duplicate email\");\r\n            }\r\n        })\r\n    }\r\n\r\n    addContactNumber=(v,event)=>{\r\n        var newData={\r\n            val:v.val,\r\n            d:v.d.contact[0]\r\n        }\r\n        fetch('https://phone-book-web-app-backend.herokuapp.com/addContactNumber',{\r\n                method:\"PUT\",\r\n                headers:{\"Content-Type\":\"application/json\"},\r\n                body: JSON.stringify(newData)\r\n            })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res);\r\n                if(res.valid){\r\n                    alert(\"Contact number added\");   \r\n                }\r\n                else{\r\n                    alert(\"Duplicate contact number\");\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        //designing all contacts data\r\n        var data= this.state.data;\r\n        var result=data.map(d=>{\r\n            var e1= d.email;\r\n            var cn1=d.contact;\r\n            var e1r=e1.map(e=>{\r\n                return (\r\n                    <p>{e}  </p>\r\n                )\r\n            })\r\n            var cn1r=cn1.map(c=>{\r\n                return (\r\n                    <p>{c}  </p>\r\n                )\r\n            })\r\n            return(\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>Name: {d.name}</CardTitle>\r\n                        <CardText>Emails: {e1r}</CardText>\r\n                        <CardText>Contact-Numbers: {cn1r}</CardText>\r\n                        <CardText>DOB: {d.dob}</CardText>\r\n                        <AddContactNumber addContactNumber={this.addContactNumber} d={d} />\r\n                        <AddEmail addEmail={this.addEmail} d={d}/>\r\n                        <CardText>-----------------------</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            )\r\n        })\r\n\r\n        //designing searched contact's data\r\n        data=this.state.searchData;\r\n        var searchedData=data.map(d=>{\r\n            var e1= d.email;\r\n            var cn1=d.contact;\r\n            var e1r=e1.map(e=>{\r\n                return (\r\n                    <p>{e}  </p>\r\n                )\r\n            })\r\n            var cn1r=cn1.map(c=>{\r\n                return (\r\n                    <p>{c}  </p>\r\n                )\r\n            })\r\n            return(\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle>Name: {d.name}</CardTitle>\r\n                        <CardText>Emails: {e1r}</CardText>\r\n                        <CardText>Contact-Numbers: {cn1r}</CardText>\r\n                        <CardText>DOB: {d.dob}</CardText>\r\n                        <AddContactNumber addContactNumber={this.addContactNumber} d={d} />\r\n                        <AddEmail addEmail={this.addEmail} d={d}/>\r\n                        <CardText>-----------------------</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            )\r\n        })\r\n\r\n        //rendering (without any css)\r\n        return(\r\n            <div>\r\n                <Search search={this.search} />\r\n                <div>{searchedData}</div>\r\n                <Form addContact={this.addContact}/>\r\n                <h4>All contacts</h4>\r\n                <div>{result}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport Main from './components/Main.js';\nimport './App.css';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}